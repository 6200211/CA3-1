.global lab1
.syntax unified

#define A #10      @ Оголошення константи A
#define B #8       @ Оголошення константи B
#define C #2       @ Оголошення константи C

lab1:
    push {lr}      @ Збереження регістра повернення у стек
    mov r1, B      @ Завантаження значення B у регістр r1
    mov r0, A      @ Завантаження значення A у регістр r0
    mov r2, C      @ Завантаження значення C у регістр r2
    bl calc        @ Перехід до підпрограми 'calc'
    pop {pc}       @ Відновлення лічильника команд

calc:
    push { r4, r5, lr }  @ Збереження регістрів r4, r5 та регістра повернення у стек
    sub r3, r0, r1       @ Обчислення (A - B) і збереження результату в r3
    cmp r3, #0           @ Порівняння r3 з 0
    it ge                @ Якщо A - B більше або дорівнює 0, виконати наступну команду
    addge r3, r1, r0     @ Якщо A - B >= 0, встановити r3 = (A + B)

    sdiv r3, r2          @ Виконання знакового ділення: r3 = r3 / C
    pop { r4, r5, lr }   @ Відновлення регістрів r4, r5 та регістра повернення

